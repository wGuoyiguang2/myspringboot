<?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.QuestionMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.entity.Question" >
        <id column="id" 		 property="id"      jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="type"    property="type"    jdbcType="VARCHAR" />
        <result column="sort"    property="sort"    jdbcType="INTEGER" />
        <collection property="options" javaType="java.util.ArrayList" ofType="com.example.demo.entity.QuestionOption">
            <id column="oid" property="id" jdbcType="VARCHAR" />
            <result column="ocontent" property="content" jdbcType="VARCHAR" />
            <result column="osort" property="sort" jdbcType="INTEGER" />
        </collection>
        <!-- 列的别名 o_id,o_content,o_sort , 起别名是因为主子表都有这几个字段
             这里要写 ofType, javaType还是可以不写 -->
    </resultMap>
    <!-- 查询列表 -->
    <select id="list" resultMap="BaseResultMap">
        SELECT
        pq.id, pq.content, pq.type, pq.sort
        ,pqo.id AS oid ,pqo.content AS ocontent ,pqo.sort AS osort <!-- 联查子表字段,起别名 -->
        FROM
        question AS pq
        LEFT JOIN question_option pqo ON pq.id = pqo.q_id <!-- 联查子表 -->
        <where>
        </where>
    </select>

    <select id="listByPage" resultMap="BaseResultMap">
        SELECT
        pq.id, pq.content, pq.type, pq.sort
        ,pqo.id AS oid ,pqo.content AS ocontent ,pqo.sort AS osort <!-- 联查子表字段,起别名 -->
        FROM
        question AS pq
        LEFT JOIN question_option pqo ON pq.id = pqo.q_id <!-- 联查子表 -->
        <where>
        </where>
    </select>



</mapper>